---
- name: Ensure Flask app directory exists
  ansible.builtin.file:
    path: /opt/flask-app
    state: directory
    owner: ec2-user
    group: ec2-user
    mode: '0755'

- name: Install Python3, pip, and virtualenv (Amazon Linux / RHEL / CentOS)
  yum:
    name:
      - python3
      - python3-pip
      - python3-virtualenv
    state: present
  when: ansible_os_family == "RedHat"
  become: yes

- name: Install Python3, pip, and venv (Debian/Ubuntu)
  apt:
    name:
      - python3
      - python3-pip
      - python3-venv
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"
  become: yes

- name: Set Flask artifact filename
  ansible.builtin.set_fact:
    flask_artifact: "flask-app-{{ lookup('env','BUILD_NUMBER') }}.tar.gz"

- name: Download Flask artifact from S3
  amazon.aws.aws_s3:
    bucket: dual-app-artifacts
    object: "flask/{{ flask_artifact }}"
    dest: "/tmp/{{ flask_artifact }}"
    mode: get
    region: eu-west-2

- name: Extract Flask artifact
  ansible.builtin.unarchive:
    src: "/tmp/{{ flask_artifact }}"
    dest: /opt/flask-app
    remote_src: yes

- name: Create Python virtualenv
  ansible.builtin.command:
    cmd: python3 -m venv /opt/flask-app/venv
    creates: /opt/flask-app/venv
  become: yes
  become_user: ec2-user

- name: Upgrade pip in virtualenv
  ansible.builtin.command:
    cmd: /opt/flask-app/venv/bin/pip install --upgrade pip
  become: yes
  become_user: ec2-user

- name: Install Flask dependencies in virtualenv
  ansible.builtin.pip:
    requirements: /opt/flask-app/requirements.txt
    virtualenv: /opt/flask-app/venv
    virtualenv_python: python3
  become: yes
  become_user: ec2-user

- name: Create systemd service for Flask
  ansible.builtin.copy:
    dest: /etc/systemd/system/flask.service
    content: |
      [Unit]
      Description=Flask App
      After=network.target

      [Service]
      User=ec2-user
      Group=ec2-user
      WorkingDirectory=/opt/flask-app
      ExecStart=/opt/flask-app/venv/bin/python /opt/flask-app/app.py
      Restart=always
      Environment=DB_HOST=localhost DB_NAME={{ db_name }} DB_USER={{ db_user }} DB_PASS={{ db_password }}

      [Install]
      WantedBy=multi-user.target
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start Flask service
  ansible.builtin.systemd:
    name: flask
    state: started
    enabled: yes
...

