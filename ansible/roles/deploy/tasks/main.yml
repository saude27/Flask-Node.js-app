---
- name: Ensure app directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /opt/flask-app
    - /opt/node-app

- name: Download Flask artifact from S3
  amazon.aws.aws_s3:
    bucket: dual-app-artifacts
    object: "flask/flask-app-{{ BUILD_NUMBER }}.tar.gz"
    dest: /opt/flask-app.tar.gz
    mode: get
    region: eu-west-2
  notify: Restart Flask app

- name: Extract Flask artifact
  unarchive:
    src: /opt/flask-app.tar.gz
    dest: /opt/flask-app
    remote_src: yes
  notify: Restart Flask app

- name: Ensure Flask systemd service exists
  copy:
    dest: /etc/systemd/system/flask-app.service
    content: |
      [Unit]
      Description=Flask App
      After=network.target

      [Service]
      User=ubuntu
      WorkingDirectory=/opt/flask-app
      ExecStart=/usr/bin/python3 app.py
      Restart=always

      [Install]
      WantedBy=multi-user.target
  notify: Reload systemd

- name: Download Node.js artifact from S3
  amazon.aws.aws_s3:
    bucket: dual-app-artifacts
    object: "node/node-app-{{ BUILD_NUMBER }}.tar.gz"
    dest: /opt/node-app.tar.gz
    mode: get
    region: eu-west-2
  notify: Restart Node.js app

- name: Extract Node.js artifact
  unarchive:
    src: /opt/node-app.tar.gz
    dest: /opt/node-app
    remote_src: yes
  notify: Restart Node.js app

- name: Ensure Node.js systemd service exists
  copy:
    dest: /etc/systemd/system/node-app.service
    content: |
      [Unit]
      Description=Node App
      After=network.target

      [Service]
      User=ubuntu
      WorkingDirectory=/opt/node-app
      ExecStart=/usr/bin/npm start
      Restart=always

      [Install]
      WantedBy=multi-user.target
  notify: Reload systemd

